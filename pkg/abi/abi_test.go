// cast calldata "handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)" "[(0x1234567890123456789012345678901234567890,42,0x,0x1234,1000000,2000000,3000000,4000000000,1000000000,0x,0x1234)]" 0xabcdefabcdefabcdefabcdefabcdefabcdefabcd
package abi_test

import (
	"math/big"
	"testing"

	"github.com/blndgs/intents-cli/pkg/abi"
	"github.com/blndgs/model"
	"github.com/ethereum/go-ethereum/common"
	"github.com/stretchr/testify/require"
)

// TestPrepareHandleOpCalldata test prepare handle Op calldata.
func TestPrepareHandleOpCalldata(t *testing.T) {
	// Setup test data
	ops := []model.UserOperation{
		{
			Sender:               common.HexToAddress("0x1234567890123456789012345678901234567890"),
			Nonce:                big.NewInt(42),
			InitCode:             []byte{},
			CallData:             []byte{0x12, 0x34},
			CallGasLimit:         big.NewInt(1000000),
			VerificationGasLimit: big.NewInt(2000000),
			PreVerificationGas:   big.NewInt(3000000),
			MaxFeePerGas:         big.NewInt(4000000000),
			MaxPriorityFeePerGas: big.NewInt(1000000000),
			PaymasterAndData:     []byte{},
			Signature:            []byte{0x12, 0x34},
		},
	}
	beneficiary := common.HexToAddress("0xabcdefabcdefabcdefabcdefabcdefabcdefabcd")
	// Call the function
	calldata, err := abi.PrepareHandleOpCalldata(ops[0], beneficiary)
	// Assertions
	require.NoError(t, err)
	require.NotEmpty(t, calldata)
	// cast calldata "handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)" "[(0x1234567890123456789012345678901234567890,42,0x,0x1234,1000000,2000000,3000000,4000000000,1000000000,0x,0x1234)]" 0xabcdefabcdefabcdefabcdefabcdefabcdefabcd
	// 0x1fad948c0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000abcdefabcdefabcdefabcdefabcdefabcdefabcd000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000001234567890123456789012345678901234567890000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000f424000000000000000000000000000000000000000000000000000000000001e848000000000000000000000000000000000000000000000000000000000002dc6c000000000000000000000000000000000000000000000000000000000ee6b2800000000000000000000000000000000000000000000000000000000003b9aca0000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000001e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021234000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021234000000000000000000000000000000000000000000000000000000000000
	expectedCalldata := "0x1fad948c0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000abcdefabcdefabcdefabcdefabcdefabcdefabcd000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000001234567890123456789012345678901234567890000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000f424000000000000000000000000000000000000000000000000000000000001e848000000000000000000000000000000000000000000000000000000000002dc6c000000000000000000000000000000000000000000000000000000000ee6b2800000000000000000000000000000000000000000000000000000000003b9aca0000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000001e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021234000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021234000000000000000000000000000000000000000000000000000000000000"
	require.Equal(t, calldata, expectedCalldata)
}
